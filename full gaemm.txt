#include <iostream>
#include <conio.h>
#include <windows.h>
using namespace std;
bool gameOver;
const int plotis = 20;
const int aukstis = 20;
int x, y, maistX, maistY, rez;
int uodX[100], uodY[100];
int nUod;
enum eKryptis { STOP = 0, LEFT, RIGHT, UP, DOWN };
eKryptis dir;
void Setupas()
{
	gameOver = false;
	dir = STOP;
	x = plotis / 2;
	y = aukstis / 2;
	maistX = rand() % plotis;
	maistY = rand() % aukstis;
}

void Draw()
{
	system("cls");
	for (int i = 0; i < plotis + 2; i++)
		cout << "#";
	cout << endl;

	for (int i = 0; i < aukstis; i++)
	{
		for (int j = 0; j < plotis; j++)
		{
			if (j == 0)
				cout << "#";
			if (i == y && j == x)
				cout << "O";
			else if (i == maistY && j == maistX)
				cout << "F";
			else {
				bool print = false;
				for (int k = 0; k < nUod; k++) {
					if (uodX[k] == j && uodY[k] == i) {
						cout << "o";
						print = true;
					}
				}
				if (!print)
					cout << " ";
			}
			if (j == plotis - 1)
				cout << "#";
		}
		cout << endl;
	}

	for (int i = 0; i < plotis + 2; i++)
		cout << "#";
	cout << endl;
	cout << "Taskai: " << rez << endl;
	cout << "Paspauskite X, kad nutraukti zaidima" << endl;
}
void Inputas()
{
	if (_kbhit())
	{
		switch (_getch())
		{
		case 'a':
			dir = LEFT;
			break;
		case 'd':
			dir = RIGHT;
			break;
		case 'w':
			dir = UP;
			break;
		case 's':
			dir = DOWN;
			break;
		case 'x':
			gameOver = true;
			break;
		}
	}
}
void Logic()
{
	int prevX = uodX[0];
	int prevY = uodY[0];
	int prev2X, prev2Y;
	uodX[0] = x;
	uodY[0] = y;
	for (int i = 1; i < nUod; i++)
	{
		prev2X = uodX[i];
		prev2Y = uodY[i];
		uodX[i] = prevX;
		uodY[i] = prevY;
		prevX = prev2X;
		prevY = prev2Y;
	}
	switch (dir)
	{
	case LEFT:
		x--;
		break;
	case RIGHT:
		x++;
		break;
	case UP:
		y--;
		break;
	case DOWN:
		y++;
		break;
	default:
		break;
	}
//	if (x > plotis || x < 0 || y > aukstis || y < 0)
//		gameOver = true;
	if (x >= plotis) x = 0; else if (x < 0) x = plotis - 1;
	if (y >= aukstis) y = 0; else if (y < 0) y = aukstis - 1;
	for (int i = 0; i < nUod; i++)
		if (uodX[i] == x && uodY[i] == y)
			gameOver = true;
	if (x == maistX && y == maistY)
	{
		rez += 1;
		maistX = rand() % plotis;
		maistY = rand() % aukstis;
		nUod++;
	}
}
int main()
{
	Setupas();
	while (!gameOver)
	{
		Draw();
		Inputas();
		Logic();
		Sleep(10);
	}

	return 0;
}